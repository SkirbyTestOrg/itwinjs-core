{
  "$schema":"https://dev.bentley.com/json_schemas/ec/31/draft-01/ecschema",
  "alias":"ts",
  "items":{
    "AbstractDerivedAbstract":{
      "baseClass":"TestSchema.AbstractEntityClass",
      "description":"An abstract class derived from an abstract class",
      "modifier":"abstract",
      "schemaItemType":"EntityClass"
    },
    "AbstractEntityClass":{
      "description":"Abstract class, cannot be instantiated",
      "modifier":"abstract",
      "properties":[
        {
          "name":"AbstractClassProperty1",
          "propertyType":"PrimitiveProperty",
          "typeName":"dateTime"
        },
        {
          "direction":"backward",
          "name":"FromAbstractToNormalClass",
          "propertyType":"NavigationProperty",
          "relationshipName":"TestSchema.NormalReferAbstractForward"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "BaseEntity":{
      "description":"Base Entity Description",
      "label":"Base Entity",
      "mixins":[
        "TestSchema.MixinClass"
      ],
      "modifier":"abstract",
      "properties":[
        {
          "name":"InheritedProperty",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "BaseEntityReferNormal":{
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.BaseEntity"
        ],
        "multiplicity":"(0..*)",
        "polymorphic":true,
        "roleLabel":"refers to"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "constraintClasses":[
          "TestSchema.NormalEntityClass"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"is referred to by"
      }
    },
    "ClassCustomAttribute":{
      "appliesTo":"AnyClass",
      "description":"Custom Attribute that can only be applied to classes.",
      "properties":[
        {
          "name":"Primitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        }
      ],
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomAnyClassAttribute":{
      "appliesTo":"AnyClass",
      "description":"Custom Attribute that can be applied to relationshipConstraint.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomAnyPropertyAttribute":{
      "appliesTo":"AnyProperty",
      "description":"Custom Attribute that can be applied to any of the property types.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomArrayPropertyAttribute":{
      "appliesTo":"ArrayProperty",
      "description":"Custom Attribute that can be applied to an ECArrayProperty.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomCustomAttributeClassAttribute":{
      "appliesTo":"CustomAttributeClass",
      "description":"Custom Attribute that can be applied to an ECCustomAttributeClass.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomEntityClassAttribute":{
      "appliesTo":"EntityClass",
      "description":"Custom Attribute that can be applied to an ECEntityClass.",
      "properties":[
        {
          "name":"EntityClassStringPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "name":"EntityClassBinaryPrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"binary"
        },
        {
          "name":"EntityClassDateTimePrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "name":"EntityClassDoublePrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"double"
        },
        {
          "name":"EntityClassIGeometryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "name":"EntityClassIntPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        },
        {
          "name":"EntityClassLongPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        },
        {
          "name":"EntityClassPoint2dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point2d"
        },
        {
          "name":"EntityClassPoint3dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point3d"
        },
        {
          "name":"EntityClassIntEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.IntEnumeration"
        },
        {
          "name":"EntityClassStringEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.StringEnumeration"
        },
        {
          "name":"CAStructProperty",
          "propertyType":"StructProperty",
          "typeName":"TestSchema.DerivedStruct"
        },
        {
          "minOccurs":0,
          "name":"CAPrimitiveArrayProperty",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"string"
        },
        {
          "minOccurs":0,
          "name":"CAStructArrayProperty",
          "propertyType":"StructArrayProperty",
          "typeName":"TestSchema.Struct"
        }
      ],
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomNavigationPropertyAttribute":{
      "appliesTo":"NavigationProperty",
      "description":"Custom Attribute that can be applied to an ECNavigationProperty.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomPrimitivePropertyAttribute":{
      "appliesTo":"PrimitiveProperty",
      "description":"Custom Attribute that can be applied to an ECProperty.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomRelationshipClassAttribute":{
      "appliesTo":"RelationshipClass",
      "description":"Custom Attribute that can be applied to an ECRelationshipClass.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomRelationshipConstraintAttribute":{
      "appliesTo":"AnyRelationshipConstraint",
      "description":"Custom Attribute that can be applied to relationshipConstraint.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomRelationshipConstraintAttributeSecond":{
      "appliesTo":"AnyRelationshipConstraint",
      "description":"Custom Attribute that can be applied to relationshipConstraint.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomStructArrayPropertyAttribute":{
      "appliesTo":"StructArrayProperty",
      "description":"Custom Attribute that can be applied to an ECStructArrayProperty.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomStructClassAttribute":{
      "appliesTo":"StructClass",
      "description":"Custom Attribute that can be applied to an ECStructClass.",
      "schemaItemType":"CustomAttributeClass"
    },
    "CustomStructPropertyAttribute":{
      "appliesTo":"StructProperty",
      "description":"Custom Attribute that can be applied to an ECStructProperty.",
      "schemaItemType":"CustomAttributeClass"
    },
    "DerivedAbstract":{
      "baseClass":"TestSchema.AbstractEntityClass",
      "description":"A class derived from an abstract class",
      "schemaItemType":"EntityClass"
    },
    "DerivedAbstractSecond":{
      "baseClass":"TestSchema.AbstractEntityClass",
      "description":"A class derived from an abstract class",
      "schemaItemType":"EntityClass"
    },
    "DerivedMixin":{
      "appliesTo":"TestSchema.Entity",
      "baseClass":"TestSchema.MixinClass",
      "description":"A Mixin class derived from a Mixin class",
      "properties":[
        {
          "name":"DerivedMixinStringPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "name":"DerivedMixinBinaryPrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"binary"
        },
        {
          "name":"DerivedMixinDateTimePrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "name":"DerivedMixinDoublePrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"double"
        },
        {
          "name":"DerivedMixinIGeometryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "name":"DerivedMixinIntPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        },
        {
          "name":"DerivedMixinLongPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        },
        {
          "name":"DerivedMixinPoint2dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point2d"
        },
        {
          "name":"DerivedMixinPoint3dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point3d"
        }
      ],
      "schemaItemType":"Mixin"
    },
    "DerivedNormal":{
      "baseClass":"TestSchema.NormalEntityClass",
      "description":"A class derived from a normal class",
      "properties":[
        {
          "name":"DerivedProperty1",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "DerivedNormalSecond":{
      "baseClass":"TestSchema.NormalEntityClass",
      "description":"A class derived from a normal class",
      "properties":[
        {
          "name":"DerivedProperty2",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "DerivedRelationshipClass":{
      "baseClass":"TestSchema.NormalReferMixinForward",
      "modifier":"sealed",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.DerivedNormal"
        ],
        "multiplicity":"(1..1)",
        "polymorphic":true,
        "roleLabel":"references"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "abstractConstraint":"TestSchema.MixinClass",
        "constraintClasses":[
          "TestSchema.DerivedMixin"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":false,
        "roleLabel":"is referenced by"
      }
    },
    "DerivedStruct":{
      "baseClass":"TestSchema.Struct",
      "label":"A Struct derived from a Struct",
      "schemaItemType":"StructClass"
    },
    "Entity":{
      "baseClass":"TestSchema.BaseEntity",
      "mixins":[
        "TestSchema.DerivedMixin"
      ],
      "properties":[
        {
          "description":"A property override.",
          "name":"InheritedProperty",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "EntityEmbedNormalBackward":{
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.Entity"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"is embedded by"
      },
      "strength":"embedding",
      "strengthDirection":"backward",
      "target":{
        "constraintClasses":[
          "TestSchema.NormalEntityClass"
        ],
        "customAttributes":[
          {
            "className":"TestSchema.CustomRelationshipConstraintAttribute"
          },
          {
            "className":"TestSchema.CustomRelationshipConstraintAttributeSecond"
          }
        ],
        "multiplicity":"(1..*)",
        "polymorphic":true,
        "roleLabel":"embeds"
      }
    },
    "EntityReferDerivedNormal":{
      "baseClass":"TestSchema.BaseEntityReferNormal",
      "modifier":"sealed",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.Entity"
        ],
        "multiplicity":"(0..*)",
        "polymorphic":true,
        "roleLabel":"refers to"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "constraintClasses":[
          "TestSchema.DerivedNormal"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"is referred to by"
      }
    },
    "EntityReferEntity":{
      "modifier":"sealed",
      "properties":[
        {
          "name":"RelationshipProperty",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        }
      ],
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.Entity"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"references"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "constraintClasses":[
          "TestSchema.Entity"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"is referenced by"
      }
    },
    "GeneralCustomAttribute":{
      "appliesTo":"Any",
      "description":"Custom Attribute that can be applied to anything.",
      "schemaItemType":"CustomAttributeClass"
    },
    "IntEnumeration":{
      "backingTypeName":"int",
      "description":"Int Enumeration",
      "enumerators":[
        {
          "label":"First",
          "value":1
        },
        {
          "label":"Second",
          "value":2
        },
        {
          "label":"Third",
          "value":3
        }
      ],
      "isStrict":true,
      "label":"This is a display label.",
      "schemaItemType":"Enumeration"
    },
    "KindOfQuantity":{
      "description":"Kind of Quantity Description",
      "label":"Kind of Quantity",
      "persistenceUnit":{
        "format":"DefaultReal",
        "unit":"CM"
      },
      "precision":0.001,
      "presentationUnits":[
        {
          "format":"DefaultReal",
          "unit":"FT"
        },
        {
          "format":"DefaultReal",
          "unit":"IN"
        }
      ],
      "schemaItemType":"KindOfQuantity"
    },
    "MixinClass":{
      "appliesTo":"TestSchema.BaseEntity",
      "description":"A Mixin is designed to avoid issues with multiple inheritance",
      "properties":[
        {
          "name":"MixinStringPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "name":"MixinBinaryPrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"binary"
        },
        {
          "name":"MixinDateTimePrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "name":"MixinDoublePrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"double"
        },
        {
          "name":"MixinIGeometryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "name":"MixinIntPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        },
        {
          "name":"MixinLongPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        },
        {
          "name":"MixinPoint2dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point2d"
        },
        {
          "name":"MixinPoint3dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point3d"
        },
        {
          "name":"MixinIntEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.IntEnumeration"
        },
        {
          "name":"MixinStringEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.StringEnumeration"
        }
      ],
      "schemaItemType":"Mixin"
    },
    "NormalEntityClass":{
      "customAttributes":[
        {
          "className":"TestSchema.CustomEntityClassAttribute"
        },
        {
          "className":"TestSchema.GeneralCustomAttribute"
        }
      ],
      "description":"Normal class with no modifier",
      "properties":[
        {
          "name":"Property1",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "NormalReferAbstractBackward":{
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.NormalEntityClass"
        ],
        "multiplicity":"(1..*)",
        "polymorphic":true,
        "roleLabel":"is referred to by"
      },
      "strength":"referencing",
      "strengthDirection":"backward",
      "target":{
        "abstractConstraint":"TestSchema.AbstractEntityClass",
        "constraintClasses":[
          "TestSchema.AbstractEntityClass",
          "TestSchema.AbstractDerivedAbstract",
          "TestSchema.DerivedAbstract",
          "TestSchema.DerivedAbstractSecond"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":false,
        "roleLabel":"refers to"
      }
    },
    "NormalReferAbstractForward":{
      "customAttributes":[
        {
          "className":"TestSchema.GeneralCustomAttribute"
        },
        {
          "className":"TestSchema.CustomRelationshipClassAttribute"
        }
      ],
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "abstractConstraint":"TestSchema.NormalEntityClass",
        "constraintClasses":[
          "TestSchema.DerivedNormal",
          "TestSchema.NormalEntityClass",
          "TestSchema.SealedDerivedNormal"
        ],
        "multiplicity":"(1..1)",
        "polymorphic":true,
        "roleLabel":"refers to"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "abstractConstraint":"TestSchema.AbstractEntityClass",
        "constraintClasses":[
          "TestSchema.AbstractEntityClass"
        ],
        "multiplicity":"(0..*)",
        "polymorphic":false,
        "roleLabel":"is referred to by"
      }
    },
    "NormalReferMixinForward":{
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.NormalEntityClass"
        ],
        "multiplicity":"(0..*)",
        "polymorphic":true,
        "roleLabel":"references"
      },
      "strength":"referencing",
      "strengthDirection":"forward",
      "target":{
        "abstractConstraint":"TestSchema.MixinClass",
        "constraintClasses":[
          "TestSchema.DerivedMixin"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"is referenced by"
      }
    },
    "PropertyCollection":{
      "customAttributes":[
        {
          "Primitive":"General Value on Class",
          "className":"TestSchema.ClassCustomAttribute"
        },
        {
          "className":"TestSchema.CustomAnyClassAttribute"
        }
      ],
      "modifier":"sealed",
      "properties":[
        {
          "label":"Property Display Label",
          "name":"PropCollectionBinaryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"binary"
        },
        {
          "description":"Property Description",
          "name":"PropCollectionBooleanPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"boolean"
        },
        {
          "name":"PropCollectionDateTimePrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "maxValue":9.6,
          "minValue":2.3,
          "name":"PropCollectionDoublePrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"double"
        },
        {
          "name":"PropCollectionIGeometryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "kindOfQuantity":"TestSchema.KindOfQuantity",
          "maxValue":10000,
          "minValue":0,
          "name":"PropCollectionIntPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        },
        {
          "name":"PropCollectionLongPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        },
        {
          "name":"PropCollectionPoint2dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point2d"
        },
        {
          "name":"PropCollectionPoint3dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point3d"
        },
        {
          "name":"PropCollectionStringPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "name":"IntEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.IntEnumeration"
        },
        {
          "name":"StringEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.StringEnumeration"
        },
        {
          "customAttributes":[
            {
              "className":"TestSchema.CustomPrimitivePropertyAttribute"
            },
            {
              "className":"TestSchema.CustomAnyPropertyAttribute"
            },
            {
              "className":"TestSchema.GeneralCustomAttribute"
            }
          ],
          "name":"PropertyWithCustomAttribute",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "customAttributes":[
            {
              "ECExpression":"\"Primitve 10=\" & this.Primitive10",
              "className":"Bentley_Standard_CustomAttributes.CalculatedECPropertySpecification"
            }
          ],
          "name":"Calculated",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "minOccurs":0,
          "name":"LongArray",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"long"
        },
        {
          "minOccurs":1,
          "name":"BinaryArray",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"binary"
        },
        {
          "customAttributes":[
            {
              "className":"TestSchema.CustomArrayPropertyAttribute"
            },
            {
              "className":"TestSchema.CustomAnyPropertyAttribute"
            },
            {
              "className":"TestSchema.GeneralCustomAttribute"
            }
          ],
          "maxOccurs":10,
          "minOccurs":0,
          "name":"BooleanArray",
          "propertyType":"PrimitiveArrayProperty",
          "readOnly":true,
          "typeName":"boolean"
        },
        {
          "maxOccurs":10,
          "minOccurs":1,
          "name":"DateTimeArray",
          "propertyType":"PrimitiveArrayProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "maxOccurs":5,
          "minOccurs":5,
          "name":"DoubleArray",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"double"
        },
        {
          "maxOccurs":100,
          "minOccurs":2,
          "name":"IGeometryArray",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "kindOfQuantity":"TestSchema.KindOfQuantity",
          "minOccurs":0,
          "name":"IntArray",
          "propertyType":"PrimitiveArrayProperty",
          "readOnly":true,
          "typeName":"int"
        },
        {
          "maxOccurs":3,
          "minOccurs":3,
          "name":"Point2dArray",
          "propertyType":"PrimitiveArrayProperty",
          "typeName":"point2d"
        },
        {
          "minOccurs":0,
          "name":"Point3dArray",
          "propertyType":"PrimitiveArrayProperty",
          "readOnly":true,
          "typeName":"point3d"
        },
        {
          "maxOccurs":15,
          "minOccurs":1,
          "name":"StringArray",
          "propertyType":"PrimitiveArrayProperty",
          "readOnly":true,
          "typeName":"string"
        },
        {
          "customAttributes":[
            {
              "className":"TestSchema.CustomStructPropertyAttribute"
            },
            {
              "className":"TestSchema.CustomAnyPropertyAttribute"
            },
            {
              "className":"TestSchema.GeneralCustomAttribute"
            }
          ],
          "name":"Struct1",
          "propertyType":"StructProperty",
          "typeName":"TestSchema.Struct"
        },
        {
          "customAttributes":[
            {
              "className":"TestSchema.CustomStructArrayPropertyAttribute"
            },
            {
              "className":"TestSchema.CustomAnyPropertyAttribute"
            },
            {
              "className":"TestSchema.GeneralCustomAttribute"
            }
          ],
          "minOccurs":0,
          "name":"StructArray",
          "propertyType":"StructArrayProperty",
          "typeName":"TestSchema.Struct"
        },
        {
          "maxOccurs":100,
          "minOccurs":1,
          "name":"StructArraySecond",
          "propertyType":"StructArrayProperty",
          "typeName":"TestSchema.Struct"
        },
        {
          "maxOccurs":4,
          "minOccurs":4,
          "name":"StructArrayThird",
          "propertyType":"StructArrayProperty",
          "typeName":"TestSchema.Struct"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "SchemaCustomAttribute":{
      "appliesTo":"Schema",
      "description":"Custom Attribute that can be applied to a schema.",
      "schemaItemType":"CustomAttributeClass"
    },
    "SealedDerivedAbstract":{
      "baseClass":"TestSchema.AbstractEntityClass",
      "description":"A sealed class derived from an abstract class",
      "modifier":"sealed",
      "schemaItemType":"EntityClass"
    },
    "SealedDerivedNormal":{
      "baseClass":"TestSchema.NormalEntityClass",
      "description":"A sealed class derived from a normal class",
      "modifier":"sealed",
      "schemaItemType":"EntityClass"
    },
    "SealedEntityClass":{
      "description":"Instantiable, but cannot be used as base class",
      "modifier":"sealed",
      "properties":[
        {
          "name":"SealedClassProperty1",
          "propertyType":"PrimitiveProperty",
          "typeName":"boolean"
        }
      ],
      "schemaItemType":"EntityClass"
    },
    "SealedHoldNormalBackward":{
      "modifier":"abstract",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.SealedEntityClass"
        ],
        "multiplicity":"(0..1)",
        "polymorphic":false,
        "roleLabel":"is held by"
      },
      "strength":"holding",
      "strengthDirection":"backward",
      "target":{
        "constraintClasses":[
          "TestSchema.NormalEntityClass"
        ],
        "customAttributes":[
          {
            "className":"TestSchema.CustomRelationshipConstraintAttribute"
          },
          {
            "className":"TestSchema.CustomRelationshipConstraintAttributeSecond"
          }
        ],
        "multiplicity":"(0..1)",
        "polymorphic":true,
        "roleLabel":"holds"
      }
    },
    "SealedHoldNormalForward":{
      "modifier":"sealed",
      "schemaItemType":"RelationshipClass",
      "source":{
        "constraintClasses":[
          "TestSchema.SealedEntityClass"
        ],
        "multiplicity":"(1..1)",
        "polymorphic":true,
        "roleLabel":"holds"
      },
      "strength":"holding",
      "strengthDirection":"forward",
      "target":{
        "abstractConstraint":"TestSchema.NormalEntityClass",
        "constraintClasses":[
          "TestSchema.NormalEntityClass",
          "TestSchema.DerivedNormal",
          "TestSchema.SealedDerivedNormal"
        ],
        "customAttributes":[
          {
            "className":"TestSchema.CustomRelationshipConstraintAttribute"
          },
          {
            "className":"TestSchema.CustomRelationshipConstraintAttributeSecond"
          }
        ],
        "multiplicity":"(0..*)",
        "polymorphic":true,
        "roleLabel":"is held by"
      }
    },
    "StringEnumeration":{
      "backingTypeName":"string",
      "description":"String Enumeration",
      "enumerators":[
        {
          "label":"FirstSeason",
          "value":"spring"
        },
        {
          "label":"SecondSeason",
          "value":"summer"
        },
        {
          "label":"ThirdSeason",
          "value":"fall"
        },
        {
          "label":"FourthSeason",
          "value":"winter"
        }
      ],
      "isStrict":true,
      "schemaItemType":"Enumeration"
    },
    "Struct":{
      "customAttributes":[
        {
          "className":"TestSchema.GeneralCustomAttribute"
        },
        {
          "className":"TestSchema.CustomStructClassAttribute"
        },
        {
          "className":"TestSchema.CustomAnyClassAttribute"
        }
      ],
      "label":"Struct Class",
      "properties":[
        {
          "name":"StructStringPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"string"
        },
        {
          "name":"StructBinaryPrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"binary"
        },
        {
          "name":"StructDateTimePrimitive",
          "propertyType":"PrimitiveProperty",
          "readOnly":true,
          "typeName":"dateTime"
        },
        {
          "name":"StructDoublePrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"double"
        },
        {
          "name":"StructIGeometryPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"Bentley.Geometry.Common.IGeometry"
        },
        {
          "name":"StructIntPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"int"
        },
        {
          "name":"StructLongPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"long"
        },
        {
          "name":"StructPoint2dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point2d"
        },
        {
          "name":"StructPoint3dPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"point3d"
        },
        {
          "name":"StructIntEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.IntEnumeration"
        },
        {
          "name":"StructStringEnumerationPrimitive",
          "propertyType":"PrimitiveProperty",
          "typeName":"TestSchema.StringEnumeration"
        }
      ],
      "schemaItemType":"StructClass"
    },
    "UsingCustomAttributeClass":{
      "appliesTo":"Any",
      "customAttributes":[
        {
          "className":"TestSchema.GeneralCustomAttribute"
        },
        {
          "className":"TestSchema.CustomCustomAttributeClassAttribute"
        },
        {
          "className":"TestSchema.CustomAnyClassAttribute"
        }
      ],
      "description":"Custom Attribute class that use an ECCustomAttributeClass",
      "schemaItemType":"CustomAttributeClass"
    }
  },
  "customAttributes":[
    {
      "className":"TestSchema.GeneralCustomAttribute"
    },
    {
      "className":"TestSchema.SchemaCustomAttribute"
    }
  ],
  "description":"Comprehensive Schema to demonstrate use of all ECSchema concepts.",
  "label":"Comprehensive Schema",
  "name":"TestSchema",
  "references":[
    {
      "name":"Bentley_Standard_CustomAttributes",
      "version":"01.00.13"
    },
    {
      "name":"CoreCustomAttributes",
      "version":"01.00.00"
    }
  ],
  "version":"01.00.00"
}