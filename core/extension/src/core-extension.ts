/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See LICENSE.md in the project root for license terms and full copyright notice.
*--------------------------------------------------------------------------------------------*/
/** @packageDocumentation
 * @module Extensions
 */

/* eslint-disable @typescript-eslint/naming-convention */
import {
  BackgroundFill,
  BackgroundMapType,
  BatchType,
  BisCodeSpec,
  BriefcaseIdValue,
  ChangedValueState,
  ChangeOpCode,
  ChangesetType,
  ColorByName,
  ColorDef,
  CommonLoggerCategory,
  ECSqlSystemProperty,
  ECSqlValueType,
  ElementGeometryOpcode,
  FeatureOverrideType,
  FillDisplay,
  FillFlags,
  FontType,
  GeoCoordStatus,
  GeometryClass,
  GeometryStreamFlags,
  GeometrySummaryVerbosity,
  GlobeMode,
  GridOrientationType,
  HSVConstants,
  ImageBufferFormat,
  ImageSourceFormat,
  LinePixels,
  MassPropertiesOperation,
  MonochromeMode,
  Npc,
  PlanarClipMaskMode,
  PlanarClipMaskPriority,
  QueryRowFormat,
  Rank,
  RenderMode,
  SectionType,
  SpatialClassifierInsideDisplay,
  SpatialClassifierOutsideDisplay,
  SyncMode,
  TerrainHeightOriginMode,
  TextureMapUnits,
  TextureTransparency,
  ThematicDisplayMode,
  ThematicGradientColorScheme,
  ThematicGradientMode,
  TxnAction,
  TypeOfChange,
} from "@itwin/core-common";
import {
  AccuDrawHintBuilder,
  ACSDisplayOptions,
  ACSType,
  ActivityMessageEndReason,
  BeButton,
  BeButtonEvent,
  BeModifierKeys,
  BingElevationProvider,
  BingLocationProvider,
  canvasToImageBuffer,
  canvasToResizedCanvasWithBars,
  ClipEventType,
  Cluster,
  ContextRotationId,
  CoordinateLockOverrides,
  CoordSource,
  CoordSystem,
  DepthPointSource,
  EditManipulator,
  EmphasizeElements,
  EventHandled,
  ExtensionHost,
  extractImageSourceDimensions,
  FeatureSymbology,
  FlashMode,
  FrontendLoggerCategory,
  FrustumAnimator,
  getCompressedJpegFromCanvas,
  getImageSourceFormatForMimeType,
  getImageSourceMimeType,
  GlobeAnimator,
  GraphicBranch,
  GraphicType,
  HitDetailType,
  HitGeomType,
  HitParentGeomType,
  HitPriority,
  HitSource,
  imageBufferToBase64EncodedPng,
  imageBufferToCanvas,
  imageBufferToPngDataUrl,
  imageElementFromImageSource,
  imageElementFromUrl,
  IModelApp,
  InputCollector,
  InputSource,
  InteractiveTool,
  KeyinParseError,
  LocateAction,
  LocateFilterStatus,
  LocateResponse,
  ManipulatorToolEvent,
  MarginPercent,
  Marker,
  MessageBoxIconType,
  MessageBoxType,
  MessageBoxValue,
  NotifyMessageDetails,
  OutputMessageAlert,
  OutputMessagePriority,
  OutputMessageType,
  ParseAndRunResult,
  Pixel,
  PrimitiveTool,
  queryTerrainElevationOffset,
  readElementGraphics,
  SelectionMethod,
  SelectionMode,
  SelectionProcessing,
  SelectionSetEventType,
  SnapHeat,
  SnapMode,
  SnapStatus,
  StandardViewId,
  StartOrResume,
  TileBoundingBoxes,
  TileGraphicType,
  TileLoadPriority,
  TileLoadStatus,
  TileTreeLoadStatus,
  TileVisibility,
  Tool,
  ToolAssistance,
  ToolAssistanceImage,
  ToolAssistanceInputMethod,
  ToolType,
  UniformType,
  VaryingType,
  ViewRect,
  ViewStatus,
  ViewTool,
  ViewUndoEvent,
} from "@itwin/core-frontend";
import {
  CommonToolbarItem,
  StageUsage,
  ToolbarItemUtilities,
  ToolbarOrientation,
  ToolbarUsage,
  UiItemsManager,
  UiItemsProvider,
} from "@itwin/appui-abstract";

/** @beta */
class ToolProvider implements UiItemsProvider {
  public readonly id;
  private _toolId = "";
  private _toolIcon;
  private _toolLabel;

  public constructor(tool: ToolType) {
    this.id = `ToolProvider:${tool.toolId}`;
    this._toolId = tool.toolId;
    this._toolIcon = tool.iconSpec;
    this._toolLabel = tool.description;
  }

  public provideToolbarButtonItems(
    _stageId: string,
    stageUsage: string,
    toolbarUsage: ToolbarUsage,
    toolbarOrientation: ToolbarOrientation
  ): CommonToolbarItem[] {
    const toolbarItem = ToolbarItemUtilities.createActionButton(
      this._toolId,
      0,
      this._toolIcon,
      this._toolLabel,
      async () => {
        await IModelApp.tools.run(this._toolId);
      }
    );
    return stageUsage === StageUsage.General &&
      toolbarUsage === ToolbarUsage.ContentManipulation &&
      toolbarOrientation === ToolbarOrientation.Vertical
      ? [toolbarItem]
      : [];
  }
}

/** @beta */
const registerTool = async (
  tool: ToolType,
  onRegistered?: () => any
): Promise<void> => {
  try {
    IModelApp.tools.register(tool);
    UiItemsManager.register(new ToolProvider(tool));
    onRegistered?.();
  } catch (e: any) {
    console.log(`Error registering tool: ${e}`); // eslint-disable-line
  }
};

export {
  InteractiveTool,
  PrimitiveTool,
  ViewTool,
  Tool,
  ToolAssistance,
  BeButtonEvent,
  ViewRect,
  Pixel,
  LocateResponse,
  EditManipulator,
  AccuDrawHintBuilder,
  EmphasizeElements,
  FeatureSymbology,
  GraphicBranch,
  NotifyMessageDetails,
  ColorDef,
  // Frontend functions
  getCompressedJpegFromCanvas,
  getImageSourceFormatForMimeType,
  getImageSourceMimeType,
  imageBufferToBase64EncodedPng,
  imageBufferToCanvas,
  imageBufferToPngDataUrl,
  imageElementFromImageSource,
  imageElementFromUrl,
  queryTerrainElevationOffset,
  readElementGraphics,
  canvasToImageBuffer,
  canvasToResizedCanvasWithBars,
  extractImageSourceDimensions,
  // Frontend classes
  BingElevationProvider,
  BingLocationProvider,
  InputCollector,
  FrustumAnimator,
  GlobeAnimator,
  MarginPercent,
  Marker,
  Cluster,
  ExtensionHost,
  ACSDisplayOptions,
  ACSType,
  ActivityMessageEndReason,
  BeButton,
  BeModifierKeys,
  ClipEventType,
  ContextRotationId,
  CoordinateLockOverrides,
  CoordSource,
  CoordSystem,
  DepthPointSource,
  EventHandled,
  FlashMode,
  FrontendLoggerCategory,
  GraphicType,
  HitDetailType,
  HitGeomType,
  HitParentGeomType,
  HitPriority,
  HitSource,
  InputSource,
  KeyinParseError,
  LocateAction,
  LocateFilterStatus,
  ManipulatorToolEvent,
  MessageBoxIconType,
  MessageBoxType,
  MessageBoxValue,
  OutputMessageAlert,
  OutputMessagePriority,
  OutputMessageType,
  ParseAndRunResult,
  SelectionMethod,
  SelectionMode,
  SelectionProcessing,
  SelectionSetEventType,
  SnapHeat,
  SnapMode,
  SnapStatus,
  StandardViewId,
  StartOrResume,
  TextureTransparency,
  TileBoundingBoxes,
  TileGraphicType,
  TileLoadPriority,
  TileLoadStatus,
  TileTreeLoadStatus,
  TileVisibility,
  ToolAssistanceImage,
  ToolAssistanceInputMethod,
  UniformType,
  VaryingType,
  ViewStatus,
  ViewUndoEvent,
  BackgroundFill,
  BackgroundMapType,
  BatchType,
  BisCodeSpec,
  BriefcaseIdValue,
  ChangedValueState,
  ChangeOpCode,
  ChangesetType,
  ColorByName,
  CommonLoggerCategory,
  ECSqlSystemProperty,
  ECSqlValueType,
  ElementGeometryOpcode,
  FeatureOverrideType,
  FillDisplay,
  FillFlags,
  FontType,
  GeoCoordStatus,
  GeometryClass,
  GeometryStreamFlags,
  GeometrySummaryVerbosity,
  GlobeMode,
  GridOrientationType,
  HSVConstants,
  ImageBufferFormat,
  ImageSourceFormat,
  LinePixels,
  MassPropertiesOperation,
  MonochromeMode,
  Npc,
  PlanarClipMaskMode,
  PlanarClipMaskPriority,
  QueryRowFormat,
  Rank,
  RenderMode,
  SectionType,
  SpatialClassifierInsideDisplay,
  SpatialClassifierOutsideDisplay,
  SyncMode,
  TerrainHeightOriginMode,
  TextureMapUnits,
  ThematicDisplayMode,
  ThematicGradientColorScheme,
  ThematicGradientMode,
  TxnAction,
  TypeOfChange,
  registerTool,
};

// function getExtensionApi(id: string) {
//   console.log(id);
//   return {
//     InteractiveTool,
//     PrimitiveTool,
//     ViewTool,
//     Tool,
//     ToolAssistance,
//     BeButtonEvent,
//     ViewRect,
//     Pixel,
//     LocateResponse,
//     EditManipulator,
//     AccuDrawHintBuilder,
//     EmphasizeElements,
//     FeatureSymbology,
//     GraphicBranch,
//     NotifyMessageDetails,
//     ColorDef,
//     // Frontend functions
//     getCompressedJpegFromCanvas,
//     getImageSourceFormatForMimeType,
//     getImageSourceMimeType,
//     imageBufferToBase64EncodedPng,
//     imageBufferToCanvas,
//     imageBufferToPngDataUrl,
//     imageElementFromImageSource,
//     imageElementFromUrl,
//     queryTerrainElevationOffset,
//     readElementGraphics,
//     canvasToImageBuffer,
//     canvasToResizedCanvasWithBars,
//     extractImageSourceDimensions,
//     // Frontend classes
//     BingElevationProvider,
//     BingLocationProvider,
//     InputCollector,
//     FrustumAnimator,
//     GlobeAnimator,
//     MarginPercent,
//     Marker,
//     Cluster,
//     ExtensionHost,
//     ACSDisplayOptions,
//     ACSType,
//     ActivityMessageEndReason,
//     BeButton,
//     BeModifierKeys,
//     ClipEventType,
//     ContextRotationId,
//     CoordinateLockOverrides,
//     CoordSource,
//     CoordSystem,
//     DepthPointSource,
//     EventHandled,
//     FlashMode,
//     FrontendLoggerCategory,
//     GraphicType,
//     HitDetailType,
//     HitGeomType,
//     HitParentGeomType,
//     HitPriority,
//     HitSource,
//     InputSource,
//     KeyinParseError,
//     LocateAction,
//     LocateFilterStatus,
//     ManipulatorToolEvent,
//     MessageBoxIconType,
//     MessageBoxType,
//     MessageBoxValue,
//     OutputMessageAlert,
//     OutputMessagePriority,
//     OutputMessageType,
//     ParseAndRunResult,
//     SelectionMethod,
//     SelectionMode,
//     SelectionProcessing,
//     SelectionSetEventType,
//     SnapHeat,
//     SnapMode,
//     SnapStatus,
//     StandardViewId,
//     StartOrResume,
//     TextureTransparency,
//     TileBoundingBoxes,
//     TileGraphicType,
//     TileLoadPriority,
//     TileLoadStatus,
//     TileTreeLoadStatus,
//     TileVisibility,
//     ToolAssistanceImage,
//     ToolAssistanceInputMethod,
//     UniformType,
//     VaryingType,
//     ViewStatus,
//     ViewUndoEvent,
//     BackgroundFill,
//     BackgroundMapType,
//     BatchType,
//     BisCodeSpec,
//     BriefcaseIdValue,
//     ChangedValueState,
//     ChangeOpCode,
//     ChangesetType,
//     ColorByName,
//     CommonLoggerCategory,
//     ECSqlSystemProperty,
//     ECSqlValueType,
//     ElementGeometryOpcode,
//     FeatureOverrideType,
//     FillDisplay,
//     FillFlags,
//     FontType,
//     GeoCoordStatus,
//     GeometryClass,
//     GeometryStreamFlags,
//     GeometrySummaryVerbosity,
//     GlobeMode,
//     GridOrientationType,
//     HSVConstants,
//     ImageBufferFormat,
//     ImageSourceFormat,
//     LinePixels,
//     MassPropertiesOperation,
//     MonochromeMode,
//     Npc,
//     PlanarClipMaskMode,
//     PlanarClipMaskPriority,
//     QueryRowFormat,
//     Rank,
//     RenderMode,
//     SectionType,
//     SpatialClassifierInsideDisplay,
//     SpatialClassifierOutsideDisplay,
//     SyncMode,
//     TerrainHeightOriginMode,
//     TextureMapUnits,
//     ThematicDisplayMode,
//     ThematicGradientColorScheme,
//     ThematicGradientMode,
//     TxnAction,
//     TypeOfChange,
//     registerTool: async (
//       tool: ToolType,
//       onRegistered?: () => any
//     ): Promise<void> => {
//       try {
//         IModelApp.tools.register(tool);
//         UiItemsManager.register(new ToolProvider(tool));
//         onRegistered?.();
//       } catch (e: any) {
//         console.log(`Error registering tool: ${e}`); // eslint-disable-line
//       }
//     },
//   };
// }

// export default getExtensionApi("import.meta.url");
