// Possible additions to core-frontend bundle
import {
  IModelApp,
  InteractiveTool,
  PrimitiveTool,
  Tool,
  ViewTool,
  ToolAssistance,
  BeButtonEvent,
  ViewRect,
  Pixel,
  LocateResponse,

  // FIXME
  IModelApp as IModelExtension,

  // ALL enums:
  ACSDisplayOptions,
  ACSType,
  ActivityMessageEndReason,
  BeButton,
  BeModifierKeys,
  ClipEventType,
  ContextRotationId,
  CoordinateLockOverrides,
  CoordSource,
  CoordSystem,
  DepthPointSource,
  EventHandled,
  FlashMode,
  FrontendLoggerCategory,
  GraphicType,
  HitDetailType,
  HitGeomType,
  HitParentGeomType,
  HitPriority,
  HitSource,
  InputSource,
  KeyinParseError,
  LocateAction,
  LocateFilterStatus,
  ManipulatorToolEvent,
  MessageBoxIconType,
  MessageBoxType,
  MessageBoxValue,
  OutputMessageAlert,
  OutputMessagePriority,
  OutputMessageType,
  ParseAndRunResult,
  SelectionMethod,
  SelectionMode,
  SelectionProcessing,
  SelectionSetEventType,
  SnapHeat,
  SnapMode,
  SnapStatus,
  StandardViewId,
  StartOrResume,
  TextureTransparency,
  TileBoundingBoxes,
  TileGraphicType,
  TileLoadPriority,
  TileLoadStatus,
  TileTreeLoadStatus,
  TileVisibility,
  ToolAssistanceImage,
  ToolAssistanceInputMethod,
  UniformType,
  VaryingType,
  ViewStatus,
  ViewUndoEvent,
} from "./core-frontend";

const globalSymbol = Symbol.for("itwin.core.frontend.globals");
if (globalThis[globalSymbol])
  throw new Error("Multiple @itwin/core-frontend imports detected!");

const getExtensionApi = (id) => {
  return {
    exports: {
      InteractiveTool,
      PrimitiveTool,
      ViewTool,
      Tool,

      ToolAssistance,
      BeButtonEvent,
      ViewRect,
      Pixel,
      LocateResponse,

      // FIXME:
      IModelExtension,

      ACSDisplayOptions,
      ACSType,
      ActivityMessageEndReason,
      BeButton,
      BeModifierKeys,
      ClipEventType,
      ContextRotationId,
      CoordinateLockOverrides,
      CoordSource,
      CoordSystem,
      DepthPointSource,
      EventHandled,
      FlashMode,
      FrontendLoggerCategory,
      GraphicType,
      HitDetailType,
      HitGeomType,
      HitParentGeomType,
      HitPriority,
      HitSource,
      InputSource,
      KeyinParseError,
      LocateAction,
      LocateFilterStatus,
      ManipulatorToolEvent,
      MessageBoxIconType,
      MessageBoxType,
      MessageBoxValue,
      OutputMessageAlert,
      OutputMessagePriority,
      OutputMessageType,
      ParseAndRunResult,
      SelectionMethod,
      SelectionMode,
      SelectionProcessing,
      SelectionSetEventType,
      SnapHeat,
      SnapMode,
      SnapStatus,
      StandardViewId,
      StartOrResume,
      TextureTransparency,
      TileBoundingBoxes,
      TileGraphicType,
      TileLoadPriority,
      TileLoadStatus,
      TileTreeLoadStatus,
      TileVisibility,
      ToolAssistanceImage,
      ToolAssistanceInputMethod,
      UniformType,
      VaryingType,
      ViewStatus,
      ViewUndoEvent,
    },
    api: {
      registerTool: async (toolClass) => {
        console.log(id, "REGISTERED A TOOL!");
        IModelApp.tools.register(toolClass);
      },
    },
  };
};

globalThis[globalSymbol] = {
  getExtensionApi,
};
