{
  "name": "@bentley/ecpresentation-common",
  "version": "0.3.1",
  "description": "Common pieces for ecpresentation packages.",
  "keywords": [
    "Bentley",
    "EC",
    "Presentation",
    "iModelJS"
  ],
  "license": "UNLICENSED",
  "author": {
    "name": "Bentley Systems, Inc.",
    "url": "http://www.bentley.com"
  },
  "main": "lib/index.js",
  "typings": "lib/index",
  "scripts": {
    "build": "tsc -p ./src",
    "clean": "rimraf lib package-deps.json",
    "cover": "cross-env TS_NODE_PROJECT=./tests nyc npm test -- --coverage",
    "docs": "npm run docs:reference && npm run docs:changelog",
    "docs:changelog": "node ../../scripts/copy-changelog.js --changelog ./CHANGELOG.md --name ecpresentation-common",
    "docs:reference": "node ../../node_modules/@bentley/bentleyjs-tools/scripts/docs.js --source=./src --includes=../../out/docs/extract --json=../../out/docs/reference/ecpresentation-common/file.json --tsIndexFile=index.ts --onlyJson %TYPEDOC_THEME%",
    "extract": "node ../../node_modules/@bentley/bentleyjs-tools/scripts/extract.js --fileExt=ts --extractFrom=./tests --recursive --out=../../out/docs/extract",
    "lint": "tslint -p ./src",
    "pack": "node ../../scripts/pack.js",
    "test": "node ../../scripts/run-tests.js --testsDir ./tests",
    "test+cover": "cross-env TS_NODE_PROJECT=./tests nyc npm test -- --coverage --report",
    "validatePackageJson": "validjson ./package.json",
    "watch": "npm test -- --watch"
  },
  "//peerDependencies": [
    "No need to repeat all of the dependencies are already expressed by frontend and backend."
  ],
  "devDependencies": {
    "@bentley/bentleyjs-core": "^8",
    "@bentley/imodeljs-common": "^0.88",
    "cross-env": "^5.1.0",
    "nyc": "^11.6.0",
    "rimraf": "^2.6.2",
    "tslint": "^5.9.0",
    "typedoc": "^0.11.1",
    "typescript": "^2.8.3",
    "valid-json-cli": "^1.3.0"
  },
  "nyc": {
    "nycrc-path": "../../.nycrc",
    "temp-directory": "../../out/reports/coverage/common/.nyc_output",
    "report-dir": "../../out/reports/coverage/common"
  }
}