[
  {
    "description": "ECClass without a name",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "schema": "TestSchema"
    }
  },
  {
    "description": "ECClass without a type",
    "valid": false,
    "data": {
      "name": "ClassWithoutType",
      "schema": "TestSchema"
    }
  },
  {
    "description": "ECClass without a schema",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithoutType"
    }
  },
  {
    "description": "ECClass with minimum required parts of an ECClass",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "MinimumRequiredEntityClass",
      "schema": "TestSchema"
    }
  },
  {
    "description": "ECClass with invalid schema version, 2-part version",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidVersion",
      "schema": "TestSchema",
      "schemaVersion": "1.0"
    }
  },
  {
    "description": "ECClass with invalid schema version, more than 2-digit version part",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidVersion",
      "schema": "TestSchema",
      "schemaVersion": "100.0.0"
    }
  },
  {
    "description": "ECClass with valid schema version",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithValidVersion",
      "schema": "TestSchema",
      "schemaVersion": "1.0.0"
    }
  },
  {
    "description": "ECClass with description",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithDescription",
      "schema": "TestSchema",
      "description": "Testing the description of a class"
    }
  },
  {
    "description": "ECClass with display label",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithDisplayLabel",
      "schema": "TestSchema",
      "displayLabel": "Class with DisplayLabel"
    }
  },
  {
    "description": "ECClass with invalid modifier",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidModifier",
      "schema": "TestSchema",
      "modifier": "BadModifier"
    }
  },
  {
    "description": "ECClass with valid modifier",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithModifier",
      "schema": "TestSchema",
      "modifier": "none"
    }
  },
  {
    "description": "ECClass with invalid base class",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidBaseClass",
      "schema": "TestSchema",
      "baseClass": "NeedsASchema"
    }
  },
  {
    "description": "ECClass with valid base class",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidBaseClass",
      "schema": "TestSchema",
      "baseClass": "TestSchema.ClassWithSchema"
    }
  },
  {
    "description": "ECClass with invalid custom attribute, no className",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidCA",
      "schema": "TestSchema",
      "customAttributes": [
        {
          "someValue": true
        }
      ]
    }
  },
  {
    "description": "ECClass with invalid custom attribute, className does not specify schema",
    "valid": false,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithInvalidCA",
      "schema": "TestSchema",
      "customAttributes": [
        {
          "className": "CAWithoutSchema",
          "someValue": true
        }
      ]
    }
  },
  {
    "description": "ECClass with valid custom attribute",
    "valid": true,
    "data": {
      "schemaChildType": "EntityClass",
      "name": "ClassWithValidCA",
      "schema": "TestSchema",
      "customAttributes": [
        {
          "className": "CASchema.CustomAttributeTest",
          "someValue": true
        }
      ]
    }
  }
]