{
  "$schema": "../../node_modules/@bentley/presentation-common/Ruleset.schema.json",
  "id": "IModelIndex",
  "rules": [
    {
      "ruleType": "RootNodes",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": [
            {
              "schemaName": "BisCore",
              "classNames": [
                "Subject"
              ]
            }
          ],
          "instanceFilter": "this.Parent = NULL",
          "arePolymorphic": false,
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isSubject": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Subject\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationships": {
            "schemaName": "BisCore",
            "classNames": [
              "SubjectOwnsSubjects"
            ]
          },
          "requiredDirection": "Forward",
          "relatedClasses": {
            "schemaName": "BisCore",
            "classNames": [
              "Subject"
            ]
          },
          "instanceFilter": "json_extract(this.JsonProperties, \"$.Subject.Job.Bridge\") <> NULL OR ifnull(json_extract(this.JsonProperties, \"$.Subject.Model.Type\"), \"\") = \"Hierarchy\" AND this.HasRelatedInstance(\"BisCore:ElementOwnsChildElements\", \"Forward\", \"BisCore:Element\")",
          "hideNodesInHierarchy": true,
          "groupByClass": false,
          "groupByLabel": false
        },
        {
          "specType": "RelatedInstanceNodes",
          "relationships": {
            "schemaName": "BisCore",
            "classNames": [
              "SubjectOwnsSubjects"
            ]
          },
          "requiredDirection": "Forward",
          "relatedClasses": {
            "schemaName": "BisCore",
            "classNames": [
              "Subject"
            ]
          },
          "instanceFilter": "json_extract(this.JsonProperties, \"$.Subject.Job.Bridge\") = NULL AND ifnull(json_extract(this.JsonProperties, \"$.Subject.Model.Type\"), \"\") <> \"Hierarchy\" AND (this.HasRelatedInstance(\"BisCore:ElementOwnsChildElements\", \"Forward\", \"BisCore:Subject\") OR this.HasRelatedInstance(\"BisCore:ElementOwnsChildElements\", \"Forward\", \"BisCore:PhysicalPartition\") OR this.HasRelatedInstance(\"BisCore:ElementOwnsChildElements\", \"Forward\", \"BisCore:SpatialLocationPartition\"))",
          "hideExpression": "NOT ThisNode.HasChildren AND NOT ThisNode.ChildrenArtifacts.AnyMatches(x => x.isContentModelPartition)",
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isSubject": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Subject\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationships": {
            "schemaName": "BisCore",
            "classNames": [
              "SubjectOwnsPartitionElements"
            ]
          },
          "requiredDirection": "Forward",
          "relatedClasses": {
            "schemaName": "BisCore",
            "classNames": [
              "PhysicalPartition",
              "SpatialLocationPartition"
            ]
          },
          "relatedInstances": [
            {
              "relationship": {
                "schemaName": "BisCore",
                "className": "ModelModelsElement"
              },
              "requiredDirection": "Backward",
              "class": {
                "schemaName": "BisCore",
                "className": "Model"
              },
              "isRequired": true,
              "alias": "model"
            }
          ],
          "//instanceFilter": "model.HasRelatedInstance(\"BisCore:ModelContainsElements\", \"Forward\", \"BisCore:Element\")",
          "instanceFilter": "json_extract(this.JsonProperties, \"$.PhysicalPartition.Model.Content\") = NULL",
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isModel": "true"
          }
        },
        {
          "ruleType": "StyleOverride",
          "condition": "ThisNode.IsOfClass(\"InformationPartitionElement\", \"BisCore\")",
          "foreColor": "\"Blue\""
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Subject\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationships": {
            "schemaName": "BisCore",
            "classNames": [
              "SubjectOwnsPartitionElements"
            ]
          },
          "requiredDirection": "Forward",
          "relatedClasses": {
            "schemaName": "BisCore",
            "classNames": [
              "PhysicalPartition",
              "SpatialLocationPartition"
            ]
          },
          "relatedInstances": [
            {
              "relationship": {
                "schemaName": "BisCore",
                "className": "ModelModelsElement"
              },
              "requiredDirection": "Backward",
              "class": {
                "schemaName": "BisCore",
                "className": "Model"
              },
              "isRequired": true,
              "alias": "model"
            }
          ],
          "//instanceFilter": "model.HasRelatedInstance(\"BisCore:ModelContainsElements\", \"Forward\", \"BisCore:Element\")",
          "instanceFilter": "json_extract(this.JsonProperties, \"$.PhysicalPartition.Model.Content\") <> NULL",
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "NodeArtifacts",
          "items": {
            "isContentModelPartition": "true"
          }
        },
        {
          "ruleType": "ExtendedData",
          "items": {
            "isModel": "true"
          }
        }
      ]
    }
  ]
}
