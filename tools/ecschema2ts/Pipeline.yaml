trigger:
  - master

workspace:
  clean: all
pool:
  name: iModelTechCI
  demands:
  - agent.os -equals windows_nt
  - npm

steps:
- checkout: self
  clean: true
- script: npm install
  displayName: npm ci

- script: npm run build
  displayName: Build

- script: npm run test
  displayName: test

- script: npm run cover
  displayName: Cover

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)\lib\test\coverage\cobertura-coverage.xml'
    reportDirectory: '$(Build.Repository.LocalPath)\lib\test\coverage\lcov-report'
    failIfCoverageEmpty: true

# The two tasks from Task Group: npm: Get local and server versions

- powershell: |
    $packageName = node -p "require('./package.json').name"
    $ver = npm view $packageName version

    if (!$ver) {
      $ver = 0.0.0
    }

    Write-Host "##vso[task.setvariable variable=serverVersion]$ver"
    Write-Host "Server version found: $ver"
  ignoreLASTEXITCODE: true
  displayName: 'Get package server version'

- powershell: |
    $locVersion= node -p "require('./package.json').version"
    Write-Host "##vso[task.setvariable variable=localVersion]$locVersion"
    Write-Host "Local version found: $locVersion"
  displayName: 'Get package local version'

- task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
  displayName: 'Tag Build'
  inputs:
    tags: release
  condition: and(succeeded(), ne(variables['localVersion'], variables['serverVersion']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: npm pack
  displayName: npm pack
  condition: and(succeeded(), ne(variables['localVersion'], variables['serverVersion']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- publish: bentley-ecschema2ts-$(localVersion).tgz
  displayName: Publish Package
  artifact: Package
  condition: and(succeeded(), ne(variables['localVersion'], variables['serverVersion']), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
